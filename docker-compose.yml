services:
  frontend:
    image: jpyles0524/server-dashboard:latest
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: server-dashboard
    command: ["npm", "run", "start"]
    ports:
      - 3030:3000
    environment:
      - DOPPLER_TOKEN=${DOPPLER_TOKEN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=8000"
      - "traefik.http.routers.frontend.tls=true"
    networks:
      - web
  backend:
    image: jpyles0524/server-dashboard-api:latest
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command: pdm run python -m uvicorn api.backend.app:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./configs:/project/configs
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: server-dashboard-api
    networks:
      - web
  worker:
    image: jpyles0524/server-dashboard-api:latest
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command: pdm run python -m api.backend.command_worker.worker
    container_name: server-dashboard-worker
    volumes:
      - ./configs:/project/configs
    networks:
      - web
  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # - "--providers.file.filename=/etc/traefik/dynamic_conf.yaml"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - "./dynamic_conf.yaml:/etc/traefik/dynamic_conf.yaml"
      # - "/etc/letsencrypt/live/domain/fullchain.pem:/etc/certs/ssl-cert.pem"
      # - "/etc/letsencrypt/live/domain/privkey.pem:/etc/certs/ssl-cert.key"
    networks:
      - web
  mongo:
    container_name: manager-mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - web
networks:
  web:
